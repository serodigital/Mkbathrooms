import { EventEmitter, QueryList, TemplateRef, OnInit } from '@angular/core';
import { DataTableColumn } from '../column/column.component';
import { DataTableRow } from '../row/row.component';
import { DataTableParams } from '../../types/data-table-params.type';
import { RowCallback } from '../../types/row-callback.type';
import { DataTableTranslations } from '../../types/data-table-translations.type';
import * as ɵngcc0 from '@angular/core';
export declare class DataTable implements DataTableParams, OnInit {
    private _items;
    items: any[];
    itemCount: number;
    columns: QueryList<DataTableColumn>;
    rows: QueryList<DataTableRow>;
    expandTemplate: TemplateRef<any>;
    headerTitle: string;
    header: boolean;
    pagination: boolean;
    pagination_range: boolean;
    pagination_limit: boolean;
    pagination_input: boolean;
    pagination_numbers: boolean;
    indexColumn: boolean;
    indexColumnHeader: string;
    rowColors: RowCallback;
    rowTooltip: RowCallback;
    selectColumn: boolean;
    multiSelect: boolean;
    substituteRows: boolean;
    expandableRows: boolean;
    translations: DataTableTranslations;
    selectOnRowClick: boolean;
    autoReload: boolean;
    showReloading: boolean;
    noDataMessage: string;
    indexColumnVisible: boolean;
    selectColumnVisible: boolean;
    expandColumnVisible: boolean;
    private _sortBy;
    private _sortAsc;
    private _offset;
    private _limit;
    rowClick: EventEmitter<{}>;
    rowDoubleClick: EventEmitter<{}>;
    headerClick: EventEmitter<{}>;
    cellClick: EventEmitter<{}>;
    sortBy: string;
    sortAsc: boolean;
    offset: number;
    limit: number;
    page: number;
    readonly lastPage: number;
    sort(sortBy: string, asc: boolean): void;
    ngOnInit(): void;
    private _initDefaultValues;
    private _initDefaultClickEvents;
    _reloading: boolean;
    readonly reloading: boolean;
    reload: EventEmitter<{}>;
    reloadItems(): void;
    private _onReloadFinished;
    _displayParams: DataTableParams;
    readonly displayParams: DataTableParams;
    _updateDisplayParams(): void;
    _scheduledReload: any;
    _triggerReload(): void;
    rowClicked(row: DataTableRow, event: any): void;
    rowDoubleClicked(row: DataTableRow, event: any): void;
    headerClicked(column: DataTableColumn, event: Event): void;
    private cellClicked;
    private _getRemoteParameters;
    private sortColumn;
    readonly columnCount: number;
    getRowColor(item: any, index: number, row: DataTableRow): string;
    selectedRow: DataTableRow;
    selectedRows: DataTableRow[];
    private _selectAllCheckbox;
    selectAllCheckbox: boolean;
    private _onSelectAllChanged;
    onRowSelectChanged(row: DataTableRow): void;
    readonly substituteItems: {}[];
    private _resizeInProgress;
    resizeColumnStart(event: MouseEvent, column: DataTableColumn, columnElement: HTMLElement): void;
    resizeLimit: number;
    private _isResizeInLimit;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DataTable, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DataTable, "data-table", never, { "header": "header"; "pagination": "pagination"; "pagination_range": "pagination_range"; "pagination_limit": "pagination_limit"; "pagination_input": "pagination_input"; "pagination_numbers": "pagination_numbers"; "indexColumn": "indexColumn"; "indexColumnHeader": "indexColumnHeader"; "selectColumn": "selectColumn"; "multiSelect": "multiSelect"; "substituteRows": "substituteRows"; "expandableRows": "expandableRows"; "translations": "translations"; "selectOnRowClick": "selectOnRowClick"; "autoReload": "autoReload"; "showReloading": "showReloading"; "items": "items"; "sortBy": "sortBy"; "sortAsc": "sortAsc"; "offset": "offset"; "limit": "limit"; "page": "page"; "itemCount": "itemCount"; "headerTitle": "headerTitle"; "rowColors": "rowColors"; "rowTooltip": "rowTooltip"; "noDataMessage": "noDataMessage"; }, { "rowClick": "rowClick"; "rowDoubleClick": "rowDoubleClick"; "headerClick": "headerClick"; "cellClick": "cellClick"; "reload": "reload"; }, ["expandTemplate", "columns"], never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInRhYmxlLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciwgUXVlcnlMaXN0LCBUZW1wbGF0ZVJlZiwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEYXRhVGFibGVDb2x1bW4gfSBmcm9tICcuLi9jb2x1bW4vY29sdW1uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBEYXRhVGFibGVSb3cgfSBmcm9tICcuLi9yb3cvcm93LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBEYXRhVGFibGVQYXJhbXMgfSBmcm9tICcuLi8uLi90eXBlcy9kYXRhLXRhYmxlLXBhcmFtcy50eXBlJztcbmltcG9ydCB7IFJvd0NhbGxiYWNrIH0gZnJvbSAnLi4vLi4vdHlwZXMvcm93LWNhbGxiYWNrLnR5cGUnO1xuaW1wb3J0IHsgRGF0YVRhYmxlVHJhbnNsYXRpb25zIH0gZnJvbSAnLi4vLi4vdHlwZXMvZGF0YS10YWJsZS10cmFuc2xhdGlvbnMudHlwZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEYXRhVGFibGUgaW1wbGVtZW50cyBEYXRhVGFibGVQYXJhbXMsIE9uSW5pdCB7XG4gICAgcHJpdmF0ZSBfaXRlbXM7XG4gICAgaXRlbXM6IGFueVtdO1xuICAgIGl0ZW1Db3VudDogbnVtYmVyO1xuICAgIGNvbHVtbnM6IFF1ZXJ5TGlzdDxEYXRhVGFibGVDb2x1bW4+O1xuICAgIHJvd3M6IFF1ZXJ5TGlzdDxEYXRhVGFibGVSb3c+O1xuICAgIGV4cGFuZFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIGhlYWRlclRpdGxlOiBzdHJpbmc7XG4gICAgaGVhZGVyOiBib29sZWFuO1xuICAgIHBhZ2luYXRpb246IGJvb2xlYW47XG4gICAgcGFnaW5hdGlvbl9yYW5nZTogYm9vbGVhbjtcbiAgICBwYWdpbmF0aW9uX2xpbWl0OiBib29sZWFuO1xuICAgIHBhZ2luYXRpb25faW5wdXQ6IGJvb2xlYW47XG4gICAgcGFnaW5hdGlvbl9udW1iZXJzOiBib29sZWFuO1xuICAgIGluZGV4Q29sdW1uOiBib29sZWFuO1xuICAgIGluZGV4Q29sdW1uSGVhZGVyOiBzdHJpbmc7XG4gICAgcm93Q29sb3JzOiBSb3dDYWxsYmFjaztcbiAgICByb3dUb29sdGlwOiBSb3dDYWxsYmFjaztcbiAgICBzZWxlY3RDb2x1bW46IGJvb2xlYW47XG4gICAgbXVsdGlTZWxlY3Q6IGJvb2xlYW47XG4gICAgc3Vic3RpdHV0ZVJvd3M6IGJvb2xlYW47XG4gICAgZXhwYW5kYWJsZVJvd3M6IGJvb2xlYW47XG4gICAgdHJhbnNsYXRpb25zOiBEYXRhVGFibGVUcmFuc2xhdGlvbnM7XG4gICAgc2VsZWN0T25Sb3dDbGljazogYm9vbGVhbjtcbiAgICBhdXRvUmVsb2FkOiBib29sZWFuO1xuICAgIHNob3dSZWxvYWRpbmc6IGJvb2xlYW47XG4gICAgbm9EYXRhTWVzc2FnZTogc3RyaW5nO1xuICAgIGluZGV4Q29sdW1uVmlzaWJsZTogYm9vbGVhbjtcbiAgICBzZWxlY3RDb2x1bW5WaXNpYmxlOiBib29sZWFuO1xuICAgIGV4cGFuZENvbHVtblZpc2libGU6IGJvb2xlYW47XG4gICAgcHJpdmF0ZSBfc29ydEJ5O1xuICAgIHByaXZhdGUgX3NvcnRBc2M7XG4gICAgcHJpdmF0ZSBfb2Zmc2V0O1xuICAgIHByaXZhdGUgX2xpbWl0O1xuICAgIHJvd0NsaWNrOiBFdmVudEVtaXR0ZXI8e30+O1xuICAgIHJvd0RvdWJsZUNsaWNrOiBFdmVudEVtaXR0ZXI8e30+O1xuICAgIGhlYWRlckNsaWNrOiBFdmVudEVtaXR0ZXI8e30+O1xuICAgIGNlbGxDbGljazogRXZlbnRFbWl0dGVyPHt9PjtcbiAgICBzb3J0Qnk6IHN0cmluZztcbiAgICBzb3J0QXNjOiBib29sZWFuO1xuICAgIG9mZnNldDogbnVtYmVyO1xuICAgIGxpbWl0OiBudW1iZXI7XG4gICAgcGFnZTogbnVtYmVyO1xuICAgIHJlYWRvbmx5IGxhc3RQYWdlOiBudW1iZXI7XG4gICAgc29ydChzb3J0Qnk6IHN0cmluZywgYXNjOiBib29sZWFuKTogdm9pZDtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIHByaXZhdGUgX2luaXREZWZhdWx0VmFsdWVzO1xuICAgIHByaXZhdGUgX2luaXREZWZhdWx0Q2xpY2tFdmVudHM7XG4gICAgX3JlbG9hZGluZzogYm9vbGVhbjtcbiAgICByZWFkb25seSByZWxvYWRpbmc6IGJvb2xlYW47XG4gICAgcmVsb2FkOiBFdmVudEVtaXR0ZXI8e30+O1xuICAgIHJlbG9hZEl0ZW1zKCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBfb25SZWxvYWRGaW5pc2hlZDtcbiAgICBfZGlzcGxheVBhcmFtczogRGF0YVRhYmxlUGFyYW1zO1xuICAgIHJlYWRvbmx5IGRpc3BsYXlQYXJhbXM6IERhdGFUYWJsZVBhcmFtcztcbiAgICBfdXBkYXRlRGlzcGxheVBhcmFtcygpOiB2b2lkO1xuICAgIF9zY2hlZHVsZWRSZWxvYWQ6IGFueTtcbiAgICBfdHJpZ2dlclJlbG9hZCgpOiB2b2lkO1xuICAgIHJvd0NsaWNrZWQocm93OiBEYXRhVGFibGVSb3csIGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIHJvd0RvdWJsZUNsaWNrZWQocm93OiBEYXRhVGFibGVSb3csIGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIGhlYWRlckNsaWNrZWQoY29sdW1uOiBEYXRhVGFibGVDb2x1bW4sIGV2ZW50OiBFdmVudCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBjZWxsQ2xpY2tlZDtcbiAgICBwcml2YXRlIF9nZXRSZW1vdGVQYXJhbWV0ZXJzO1xuICAgIHByaXZhdGUgc29ydENvbHVtbjtcbiAgICByZWFkb25seSBjb2x1bW5Db3VudDogbnVtYmVyO1xuICAgIGdldFJvd0NvbG9yKGl0ZW06IGFueSwgaW5kZXg6IG51bWJlciwgcm93OiBEYXRhVGFibGVSb3cpOiBzdHJpbmc7XG4gICAgc2VsZWN0ZWRSb3c6IERhdGFUYWJsZVJvdztcbiAgICBzZWxlY3RlZFJvd3M6IERhdGFUYWJsZVJvd1tdO1xuICAgIHByaXZhdGUgX3NlbGVjdEFsbENoZWNrYm94O1xuICAgIHNlbGVjdEFsbENoZWNrYm94OiBib29sZWFuO1xuICAgIHByaXZhdGUgX29uU2VsZWN0QWxsQ2hhbmdlZDtcbiAgICBvblJvd1NlbGVjdENoYW5nZWQocm93OiBEYXRhVGFibGVSb3cpOiB2b2lkO1xuICAgIHJlYWRvbmx5IHN1YnN0aXR1dGVJdGVtczoge31bXTtcbiAgICBwcml2YXRlIF9yZXNpemVJblByb2dyZXNzO1xuICAgIHJlc2l6ZUNvbHVtblN0YXJ0KGV2ZW50OiBNb3VzZUV2ZW50LCBjb2x1bW46IERhdGFUYWJsZUNvbHVtbiwgY29sdW1uRWxlbWVudDogSFRNTEVsZW1lbnQpOiB2b2lkO1xuICAgIHJlc2l6ZUxpbWl0OiBudW1iZXI7XG4gICAgcHJpdmF0ZSBfaXNSZXNpemVJbkxpbWl0O1xufVxuIl19