import * as tslib_1 from "tslib";
import { Directive, ElementRef, Renderer } from '@angular/core';
function isBlank(obj) {
    return obj === undefined || obj === null;
}
var Hide = /** @class */ (function () {
    function Hide(_elementRef, _renderer) {
        this._elementRef = _elementRef;
        this._renderer = _renderer;
        this._prevCondition = null;
    }
    Object.defineProperty(Hide.prototype, "hide", {
        set: function (newCondition) {
            this.initDisplayStyle();
            if (newCondition &&
                (isBlank(this._prevCondition) || !this._prevCondition)) {
                this._prevCondition = true;
                this._renderer.setElementStyle(this._elementRef.nativeElement, 'display', 'none');
            }
            else if (!newCondition &&
                (isBlank(this._prevCondition) || this._prevCondition)) {
                this._prevCondition = false;
                this._renderer.setElementStyle(this._elementRef.nativeElement, 'display', this._displayStyle);
            }
        },
        enumerable: true,
        configurable: true
    });
    Hide.prototype.initDisplayStyle = function () {
        if (this._displayStyle === undefined) {
            var displayStyle = this._elementRef.nativeElement.style.display;
            if (displayStyle && displayStyle !== 'none') {
                this._displayStyle = displayStyle;
            }
        }
    };
    Hide = tslib_1.__decorate([
        Directive({ selector: '[hide]', inputs: ['hide'] }),
        tslib_1.__metadata("design:paramtypes", [ElementRef, Renderer])
    ], Hide);
    return Hide;
}());
export { Hide };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlkZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bpc21hdGpvbi9hbmd1bGFyLWRhdGEtdGFibGUvIiwic291cmNlcyI6WyJ1dGlscy9oaWRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFaEUsU0FBUyxPQUFPLENBQUMsR0FBUTtJQUN2QixPQUFPLEdBQUcsS0FBSyxTQUFTLElBQUksR0FBRyxLQUFLLElBQUksQ0FBQztBQUMzQyxDQUFDO0FBR0Q7SUFJRSxjQUFvQixXQUF1QixFQUFVLFNBQW1CO1FBQXBELGdCQUFXLEdBQVgsV0FBVyxDQUFZO1FBQVUsY0FBUyxHQUFULFNBQVMsQ0FBVTtRQUhoRSxtQkFBYyxHQUFZLElBQUksQ0FBQztJQUdvQyxDQUFDO0lBRTVFLHNCQUFJLHNCQUFJO2FBQVIsVUFBUyxZQUFxQjtZQUM1QixJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztZQUV4QixJQUNFLFlBQVk7Z0JBQ1osQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxFQUN0RDtnQkFDQSxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQztnQkFDM0IsSUFBSSxDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQzVCLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxFQUM5QixTQUFTLEVBQ1QsTUFBTSxDQUNQLENBQUM7YUFDSDtpQkFBTSxJQUNMLENBQUMsWUFBWTtnQkFDYixDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksSUFBSSxDQUFDLGNBQWMsQ0FBQyxFQUNyRDtnQkFDQSxJQUFJLENBQUMsY0FBYyxHQUFHLEtBQUssQ0FBQztnQkFDNUIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQzVCLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxFQUM5QixTQUFTLEVBQ1QsSUFBSSxDQUFDLGFBQWEsQ0FDbkIsQ0FBQzthQUNIO1FBQ0gsQ0FBQzs7O09BQUE7SUFFTywrQkFBZ0IsR0FBeEI7UUFDRSxJQUFJLElBQUksQ0FBQyxhQUFhLEtBQUssU0FBUyxFQUFFO1lBQ3BDLElBQU0sWUFBWSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUM7WUFDbEUsSUFBSSxZQUFZLElBQUksWUFBWSxLQUFLLE1BQU0sRUFBRTtnQkFDM0MsSUFBSSxDQUFDLGFBQWEsR0FBRyxZQUFZLENBQUM7YUFDbkM7U0FDRjtJQUNILENBQUM7SUF2Q1UsSUFBSTtRQURoQixTQUFTLENBQUMsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUM7aURBS2pCLFVBQVUsRUFBcUIsUUFBUTtPQUo3RCxJQUFJLENBd0NoQjtJQUFELFdBQUM7Q0FBQSxBQXhDRCxJQXdDQztTQXhDWSxJQUFJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBSZW5kZXJlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5mdW5jdGlvbiBpc0JsYW5rKG9iajogYW55KTogYm9vbGVhbiB7XG4gIHJldHVybiBvYmogPT09IHVuZGVmaW5lZCB8fCBvYmogPT09IG51bGw7XG59XG5cbkBEaXJlY3RpdmUoeyBzZWxlY3RvcjogJ1toaWRlXScsIGlucHV0czogWydoaWRlJ10gfSlcbmV4cG9ydCBjbGFzcyBIaWRlIHtcbiAgcHJpdmF0ZSBfcHJldkNvbmRpdGlvbjogYm9vbGVhbiA9IG51bGw7XG4gIHByaXZhdGUgX2Rpc3BsYXlTdHlsZTogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgX2VsZW1lbnRSZWY6IEVsZW1lbnRSZWYsIHByaXZhdGUgX3JlbmRlcmVyOiBSZW5kZXJlcikge31cblxuICBzZXQgaGlkZShuZXdDb25kaXRpb246IGJvb2xlYW4pIHtcbiAgICB0aGlzLmluaXREaXNwbGF5U3R5bGUoKTtcblxuICAgIGlmIChcbiAgICAgIG5ld0NvbmRpdGlvbiAmJlxuICAgICAgKGlzQmxhbmsodGhpcy5fcHJldkNvbmRpdGlvbikgfHwgIXRoaXMuX3ByZXZDb25kaXRpb24pXG4gICAgKSB7XG4gICAgICB0aGlzLl9wcmV2Q29uZGl0aW9uID0gdHJ1ZTtcbiAgICAgIHRoaXMuX3JlbmRlcmVyLnNldEVsZW1lbnRTdHlsZShcbiAgICAgICAgdGhpcy5fZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LFxuICAgICAgICAnZGlzcGxheScsXG4gICAgICAgICdub25lJ1xuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKFxuICAgICAgIW5ld0NvbmRpdGlvbiAmJlxuICAgICAgKGlzQmxhbmsodGhpcy5fcHJldkNvbmRpdGlvbikgfHwgdGhpcy5fcHJldkNvbmRpdGlvbilcbiAgICApIHtcbiAgICAgIHRoaXMuX3ByZXZDb25kaXRpb24gPSBmYWxzZTtcbiAgICAgIHRoaXMuX3JlbmRlcmVyLnNldEVsZW1lbnRTdHlsZShcbiAgICAgICAgdGhpcy5fZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LFxuICAgICAgICAnZGlzcGxheScsXG4gICAgICAgIHRoaXMuX2Rpc3BsYXlTdHlsZVxuICAgICAgKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGluaXREaXNwbGF5U3R5bGUoKSB7XG4gICAgaWYgKHRoaXMuX2Rpc3BsYXlTdHlsZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBjb25zdCBkaXNwbGF5U3R5bGUgPSB0aGlzLl9lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQuc3R5bGUuZGlzcGxheTtcbiAgICAgIGlmIChkaXNwbGF5U3R5bGUgJiYgZGlzcGxheVN0eWxlICE9PSAnbm9uZScpIHtcbiAgICAgICAgdGhpcy5fZGlzcGxheVN0eWxlID0gZGlzcGxheVN0eWxlO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIl19