import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { DataTable } from './components/table/table.component';
import { DataTableColumn } from './components/column/column.component';
import { DataTableRow } from './components/row/row.component';
import { DataTablePagination } from './components/pagination/pagination.component';
import { DataTableHeader } from './components/header/header.component';
import { PixelConverter } from './utils/px';
import { Hide } from './utils/hide';
import { MinPipe } from './utils/min';
import { defaultTranslations } from './types/default-translations.type';
export * from './tools/data-table-resource';
export { DataTable, DataTableColumn, DataTableRow, DataTablePagination, DataTableHeader, defaultTranslations };
export var DATA_TABLE_DIRECTIVES = [DataTable, DataTableColumn];
var DataTableModule = /** @class */ (function () {
    function DataTableModule() {
    }
    DataTableModule = tslib_1.__decorate([
        NgModule({
            imports: [CommonModule, FormsModule],
            declarations: [
                DataTable,
                DataTableColumn,
                DataTableRow,
                DataTablePagination,
                DataTableHeader,
                PixelConverter,
                Hide,
                MinPipe
            ],
            exports: [DataTable, DataTableColumn]
        })
    ], DataTableModule);
    return DataTableModule;
}());
export { DataTableModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AaXNtYXRqb24vYW5ndWxhci1kYXRhLXRhYmxlLyIsInNvdXJjZXMiOlsiaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUU3QyxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDL0QsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUM5RCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSw4Q0FBOEMsQ0FBQztBQUNuRixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFFdkUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUM1QyxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQ3BDLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFLdEMsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDeEUsY0FBYyw2QkFBNkIsQ0FBQztBQUM1QyxPQUFPLEVBQ0wsU0FBUyxFQUNULGVBQWUsRUFDZixZQUFZLEVBQ1osbUJBQW1CLEVBQ25CLGVBQWUsRUFLZixtQkFBbUIsRUFDcEIsQ0FBQztBQUNGLE1BQU0sQ0FBQyxJQUFNLHFCQUFxQixHQUFHLENBQUMsU0FBUyxFQUFFLGVBQWUsQ0FBQyxDQUFDO0FBZ0JsRTtJQUFBO0lBQThCLENBQUM7SUFBbEIsZUFBZTtRQWQzQixRQUFRLENBQUM7WUFDUixPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsV0FBVyxDQUFDO1lBQ3BDLFlBQVksRUFBRTtnQkFDWixTQUFTO2dCQUNULGVBQWU7Z0JBQ2YsWUFBWTtnQkFDWixtQkFBbUI7Z0JBQ25CLGVBQWU7Z0JBQ2YsY0FBYztnQkFDZCxJQUFJO2dCQUNKLE9BQU87YUFDUjtZQUNELE9BQU8sRUFBRSxDQUFDLFNBQVMsRUFBRSxlQUFlLENBQUM7U0FDdEMsQ0FBQztPQUNXLGVBQWUsQ0FBRztJQUFELHNCQUFDO0NBQUEsQUFBL0IsSUFBK0I7U0FBbEIsZUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5cbmltcG9ydCB7IERhdGFUYWJsZSB9IGZyb20gJy4vY29tcG9uZW50cy90YWJsZS90YWJsZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgRGF0YVRhYmxlQ29sdW1uIH0gZnJvbSAnLi9jb21wb25lbnRzL2NvbHVtbi9jb2x1bW4uY29tcG9uZW50JztcbmltcG9ydCB7IERhdGFUYWJsZVJvdyB9IGZyb20gJy4vY29tcG9uZW50cy9yb3cvcm93LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBEYXRhVGFibGVQYWdpbmF0aW9uIH0gZnJvbSAnLi9jb21wb25lbnRzL3BhZ2luYXRpb24vcGFnaW5hdGlvbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgRGF0YVRhYmxlSGVhZGVyIH0gZnJvbSAnLi9jb21wb25lbnRzL2hlYWRlci9oZWFkZXIuY29tcG9uZW50JztcblxuaW1wb3J0IHsgUGl4ZWxDb252ZXJ0ZXIgfSBmcm9tICcuL3V0aWxzL3B4JztcbmltcG9ydCB7IEhpZGUgfSBmcm9tICcuL3V0aWxzL2hpZGUnO1xuaW1wb3J0IHsgTWluUGlwZSB9IGZyb20gJy4vdXRpbHMvbWluJztcbmltcG9ydCB7IERhdGFUYWJsZVRyYW5zbGF0aW9ucyB9IGZyb20gJy4vdHlwZXMvZGF0YS10YWJsZS10cmFuc2xhdGlvbnMudHlwZSc7XG5pbXBvcnQgeyBDZWxsQ2FsbGJhY2sgfSBmcm9tICcuL3R5cGVzL2NlbGwtY2FsbGJhY2sudHlwZSc7XG5pbXBvcnQgeyBSb3dDYWxsYmFjayB9IGZyb20gJy4vdHlwZXMvcm93LWNhbGxiYWNrLnR5cGUnO1xuaW1wb3J0IHsgRGF0YVRhYmxlUGFyYW1zIH0gZnJvbSAnLi90eXBlcy9kYXRhLXRhYmxlLXBhcmFtcy50eXBlJztcbmltcG9ydCB7IGRlZmF1bHRUcmFuc2xhdGlvbnMgfSBmcm9tICcuL3R5cGVzL2RlZmF1bHQtdHJhbnNsYXRpb25zLnR5cGUnO1xuZXhwb3J0ICogZnJvbSAnLi90b29scy9kYXRhLXRhYmxlLXJlc291cmNlJztcbmV4cG9ydCB7XG4gIERhdGFUYWJsZSxcbiAgRGF0YVRhYmxlQ29sdW1uLFxuICBEYXRhVGFibGVSb3csXG4gIERhdGFUYWJsZVBhZ2luYXRpb24sXG4gIERhdGFUYWJsZUhlYWRlcixcbiAgRGF0YVRhYmxlVHJhbnNsYXRpb25zLFxuICBDZWxsQ2FsbGJhY2ssXG4gIFJvd0NhbGxiYWNrLFxuICBEYXRhVGFibGVQYXJhbXMsXG4gIGRlZmF1bHRUcmFuc2xhdGlvbnNcbn07XG5leHBvcnQgY29uc3QgREFUQV9UQUJMRV9ESVJFQ1RJVkVTID0gW0RhdGFUYWJsZSwgRGF0YVRhYmxlQ29sdW1uXTtcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgRm9ybXNNb2R1bGVdLFxuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBEYXRhVGFibGUsXG4gICAgRGF0YVRhYmxlQ29sdW1uLFxuICAgIERhdGFUYWJsZVJvdyxcbiAgICBEYXRhVGFibGVQYWdpbmF0aW9uLFxuICAgIERhdGFUYWJsZUhlYWRlcixcbiAgICBQaXhlbENvbnZlcnRlcixcbiAgICBIaWRlLFxuICAgIE1pblBpcGVcbiAgXSxcbiAgZXhwb3J0czogW0RhdGFUYWJsZSwgRGF0YVRhYmxlQ29sdW1uXVxufSlcbmV4cG9ydCBjbGFzcyBEYXRhVGFibGVNb2R1bGUge31cbiJdfQ==