import * as tslib_1 from "tslib";
import { Component, Inject, forwardRef, Input } from '@angular/core';
import { DataTable } from '../table/table.component';
var DataTablePagination = /** @class */ (function () {
    function DataTablePagination(dataTable) {
        this.dataTable = dataTable;
        this.show_range = false;
        this.show_limit = false;
        this.show_input = false;
        this.show_numbers = true;
    }
    DataTablePagination.prototype.pageBack = function () {
        this.dataTable.offset -= Math.min(this.dataTable.limit, this.dataTable.offset);
    };
    DataTablePagination.prototype.pageForward = function () {
        this.dataTable.offset += this.dataTable.limit;
    };
    DataTablePagination.prototype.pageFirst = function () {
        this.dataTable.offset = 0;
    };
    DataTablePagination.prototype.pageLast = function () {
        this.dataTable.offset = (this.maxPage - 1) * this.dataTable.limit;
    };
    Object.defineProperty(DataTablePagination.prototype, "maxPage", {
        get: function () {
            return Math.ceil(this.dataTable.itemCount / this.dataTable.limit);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataTablePagination.prototype, "limit", {
        get: function () {
            return this.dataTable.limit;
        },
        set: function (value) {
            this.dataTable.limit = Number(value); // TODO better way to handle that value of number <input> is string?
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataTablePagination.prototype, "page", {
        get: function () {
            return this.dataTable.page;
        },
        set: function (value) {
            this.dataTable.page = Number(value);
        },
        enumerable: true,
        configurable: true
    });
    DataTablePagination.prototype.createPageRange = function (number, page) {
        var displayedPage = 3;
        var items = [];
        if (number > 1) {
            var maxPage = number;
            var minPage = 1;
            if (page === 1 && maxPage >= displayedPage) {
                maxPage = 3;
            }
            else if (page > 1 && maxPage > page + 1) {
                minPage = page - 1;
                maxPage = page + 1;
            }
            else if (page > 2 && maxPage > page) {
                minPage = page - 1;
                maxPage = page + 1;
            }
            else if (page > 2 && maxPage === page) {
                minPage = page - 2;
                maxPage = page;
            }
            for (var i = minPage; i <= maxPage; i++) {
                items.push(i);
            }
        }
        return items;
    };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], DataTablePagination.prototype, "show_range", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], DataTablePagination.prototype, "show_limit", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], DataTablePagination.prototype, "show_input", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], DataTablePagination.prototype, "show_numbers", void 0);
    DataTablePagination = tslib_1.__decorate([
        Component({
            selector: 'data-table-pagination',
            template: "<div class=\"pagination-box d-flex justify-content-between\">\n  <div class=\"pagination-range\" *ngIf=\"show_range\">\n    {{ dataTable.translations.paginationRange }}:\n    <span>{{ dataTable.offset + 1 }}</span>\n    -\n    <span>\n      {{ [dataTable.offset + dataTable.limit, dataTable.itemCount] | min }}\n    </span>\n    /\n    <span>{{ dataTable.itemCount }}</span>\n  </div>\n  <div class=\"pagination-controllers d-flex\">\n    <div class=\"pagination-limit\" *ngIf=\"show_limit\">\n      <div class=\"input-group\">\n        <span class=\"input-group-prepend\">\n          <span class=\"input-group-text\">\n            {{ dataTable.translations.paginationLimit }}:\n          </span>\n        </span>\n        <input\n          #limitInput\n          type=\"number\"\n          class=\"form-control\"\n          min=\"1\"\n          step=\"1\"\n          [ngModel]=\"limit\"\n          (blur)=\"limit = limitInput.value\"\n          (keyup.enter)=\"limit = limitInput.value\"\n          (keyup.esc)=\"limitInput.value = limit\"\n        />\n      </div>\n    </div>\n    <div class=\"pagination-pages d-flex\" *ngIf=\"maxPage > 1\">\n      <button\n        [disabled]=\"dataTable.offset <= 0\"\n        (click)=\"pageFirst()\"\n        class=\"btn btn-secondary pagination-firstpage\"\n      >\n        &laquo;\n      </button>\n      <button\n        [disabled]=\"dataTable.offset <= 0\"\n        (click)=\"pageBack()\"\n        class=\"btn btn-secondary pagination-prevpage mx-1\"\n      >\n        &lsaquo;\n      </button>\n      <div class=\"pagination-page\" *ngIf=\"show_input\">\n        <div class=\"input-group\">\n          <input\n            #pageInput\n            type=\"number\"\n            class=\"form-control\"\n            min=\"1\"\n            step=\"1\"\n            max=\"{{ maxPage }}\"\n            [ngModel]=\"page\"\n            (blur)=\"page = pageInput.value\"\n            (keyup.enter)=\"page = pageInput.value\"\n            (keyup.esc)=\"pageInput.value = page\"\n          />\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">\n              <span>/</span>\n              <span>{{ dataTable.lastPage }}</span>\n            </span>\n          </div>\n        </div>\n      </div>\n      <div class=\"pagination-page\" *ngIf=\"show_numbers\">\n        <button\n          *ngFor=\"let i of createPageRange(maxPage, page)\"\n          [disabled]=\"i == page\"\n          (click)=\"page = i\"\n          class=\"btn btn-default\"\n        >\n          {{ i }}\n        </button>\n      </div>\n      <button\n        [disabled]=\"dataTable.offset + dataTable.limit >= dataTable.itemCount\"\n        (click)=\"pageForward()\"\n        class=\"btn btn-secondary pagination-nextpage mx-1\"\n      >\n        &rsaquo;\n      </button>\n      <button\n        [disabled]=\"dataTable.offset + dataTable.limit >= dataTable.itemCount\"\n        (click)=\"pageLast()\"\n        class=\"btn btn-secondary pagination-lastpage\"\n      >\n        &raquo;\n      </button>\n    </div>\n  </div>\n</div>\n",
            styles: [".pagination-box{position:relative;margin-top:-10px}.pagination-range{display:flex;align-items:center;margin-left:3px}.pagination-range span{margin:0 4px}.pagination-range span:last-child{margin-right:0;margin-left:4px}.pagination-controllers input{min-width:60px;text-align:right}.pagination-limit{margin-right:25px;min-width:150px;max-width:200px}.pagination-page{width:110px}.pagination-reload{color:gray;font-size:12px}"]
        }),
        tslib_1.__param(0, Inject(forwardRef(function () { return DataTable; }))),
        tslib_1.__metadata("design:paramtypes", [DataTable])
    ], DataTablePagination);
    return DataTablePagination;
}());
export { DataTablePagination };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnaW5hdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AaXNtYXRqb24vYW5ndWxhci1kYXRhLXRhYmxlLyIsInNvdXJjZXMiOlsiY29tcG9uZW50cy9wYWdpbmF0aW9uL3BhZ2luYXRpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3JFLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQU9yRDtJQU1FLDZCQUM4QyxTQUFvQjtRQUFwQixjQUFTLEdBQVQsU0FBUyxDQUFXO1FBTnpELGVBQVUsR0FBRyxLQUFLLENBQUM7UUFDbkIsZUFBVSxHQUFHLEtBQUssQ0FBQztRQUNuQixlQUFVLEdBQUcsS0FBSyxDQUFDO1FBQ25CLGlCQUFZLEdBQUcsSUFBSSxDQUFDO0lBSTFCLENBQUM7SUFFSixzQ0FBUSxHQUFSO1FBQ0UsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDLEdBQUcsQ0FDL0IsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQ3BCLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUN0QixDQUFDO0lBQ0osQ0FBQztJQUVELHlDQUFXLEdBQVg7UUFDRSxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQztJQUNoRCxDQUFDO0lBRUQsdUNBQVMsR0FBVDtRQUNFLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztJQUM1QixDQUFDO0lBRUQsc0NBQVEsR0FBUjtRQUNFLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQztJQUNwRSxDQUFDO0lBRUQsc0JBQUksd0NBQU87YUFBWDtZQUNFLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3BFLENBQUM7OztPQUFBO0lBRUQsc0JBQUksc0NBQUs7YUFBVDtZQUNFLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUM7UUFDOUIsQ0FBQzthQUVELFVBQVUsS0FBSztZQUNiLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxHQUFHLE1BQU0sQ0FBQyxLQUFZLENBQUMsQ0FBQyxDQUFDLG9FQUFvRTtRQUNuSCxDQUFDOzs7T0FKQTtJQU1ELHNCQUFJLHFDQUFJO2FBQVI7WUFDRSxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDO1FBQzdCLENBQUM7YUFFRCxVQUFTLEtBQUs7WUFDWixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksR0FBRyxNQUFNLENBQUMsS0FBWSxDQUFDLENBQUM7UUFDN0MsQ0FBQzs7O09BSkE7SUFNRCw2Q0FBZSxHQUFmLFVBQWdCLE1BQU0sRUFBRSxJQUFJO1FBQzFCLElBQU0sYUFBYSxHQUFHLENBQUMsQ0FBQztRQUN4QixJQUFJLEtBQUssR0FBYSxFQUFFLENBQUM7UUFDekIsSUFBSSxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQ2QsSUFBSSxPQUFPLEdBQUcsTUFBTSxDQUFDO1lBQ3JCLElBQUksT0FBTyxHQUFHLENBQUMsQ0FBQztZQUNoQixJQUFJLElBQUksS0FBSyxDQUFDLElBQUksT0FBTyxJQUFJLGFBQWEsRUFBRTtnQkFDMUMsT0FBTyxHQUFHLENBQUMsQ0FBQzthQUNiO2lCQUFNLElBQUksSUFBSSxHQUFHLENBQUMsSUFBSSxPQUFPLEdBQUcsSUFBSSxHQUFHLENBQUMsRUFBRTtnQkFDekMsT0FBTyxHQUFHLElBQUksR0FBRyxDQUFDLENBQUM7Z0JBQ25CLE9BQU8sR0FBRyxJQUFJLEdBQUcsQ0FBQyxDQUFDO2FBQ3BCO2lCQUFNLElBQUksSUFBSSxHQUFHLENBQUMsSUFBSSxPQUFPLEdBQUcsSUFBSSxFQUFFO2dCQUNyQyxPQUFPLEdBQUcsSUFBSSxHQUFHLENBQUMsQ0FBQztnQkFDbkIsT0FBTyxHQUFHLElBQUksR0FBRyxDQUFDLENBQUM7YUFDcEI7aUJBQU0sSUFBSSxJQUFJLEdBQUcsQ0FBQyxJQUFJLE9BQU8sS0FBSyxJQUFJLEVBQUU7Z0JBQ3ZDLE9BQU8sR0FBRyxJQUFJLEdBQUcsQ0FBQyxDQUFDO2dCQUNuQixPQUFPLEdBQUcsSUFBSSxDQUFDO2FBQ2hCO1lBQ0QsS0FBSyxJQUFJLENBQUMsR0FBRyxPQUFPLEVBQUUsQ0FBQyxJQUFJLE9BQU8sRUFBRSxDQUFDLEVBQUUsRUFBRTtnQkFDdkMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUNmO1NBQ0Y7UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7SUF2RVE7UUFBUixLQUFLLEVBQUU7OzJEQUFvQjtJQUNuQjtRQUFSLEtBQUssRUFBRTs7MkRBQW9CO0lBQ25CO1FBQVIsS0FBSyxFQUFFOzsyREFBb0I7SUFDbkI7UUFBUixLQUFLLEVBQUU7OzZEQUFxQjtJQUpsQixtQkFBbUI7UUFML0IsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLHVCQUF1QjtZQUNqQyxraEdBQTBDOztTQUUzQyxDQUFDO1FBUUcsbUJBQUEsTUFBTSxDQUFDLFVBQVUsQ0FBQyxjQUFNLE9BQUEsU0FBUyxFQUFULENBQVMsQ0FBQyxDQUFDLENBQUE7aURBQW1CLFNBQVM7T0FQdkQsbUJBQW1CLENBeUUvQjtJQUFELDBCQUFDO0NBQUEsQUF6RUQsSUF5RUM7U0F6RVksbUJBQW1CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbmplY3QsIGZvcndhcmRSZWYsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEYXRhVGFibGUgfSBmcm9tICcuLi90YWJsZS90YWJsZS5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdkYXRhLXRhYmxlLXBhZ2luYXRpb24nLFxuICB0ZW1wbGF0ZVVybDogJy4vcGFnaW5hdGlvbi5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3BhZ2luYXRpb24uY29tcG9uZW50LmNzcyddXG59KVxuZXhwb3J0IGNsYXNzIERhdGFUYWJsZVBhZ2luYXRpb24ge1xuICBASW5wdXQoKSBzaG93X3JhbmdlID0gZmFsc2U7XG4gIEBJbnB1dCgpIHNob3dfbGltaXQgPSBmYWxzZTtcbiAgQElucHV0KCkgc2hvd19pbnB1dCA9IGZhbHNlO1xuICBASW5wdXQoKSBzaG93X251bWJlcnMgPSB0cnVlO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIEBJbmplY3QoZm9yd2FyZFJlZigoKSA9PiBEYXRhVGFibGUpKSBwdWJsaWMgZGF0YVRhYmxlOiBEYXRhVGFibGVcbiAgKSB7fVxuXG4gIHBhZ2VCYWNrKCkge1xuICAgIHRoaXMuZGF0YVRhYmxlLm9mZnNldCAtPSBNYXRoLm1pbihcbiAgICAgIHRoaXMuZGF0YVRhYmxlLmxpbWl0LFxuICAgICAgdGhpcy5kYXRhVGFibGUub2Zmc2V0XG4gICAgKTtcbiAgfVxuXG4gIHBhZ2VGb3J3YXJkKCkge1xuICAgIHRoaXMuZGF0YVRhYmxlLm9mZnNldCArPSB0aGlzLmRhdGFUYWJsZS5saW1pdDtcbiAgfVxuXG4gIHBhZ2VGaXJzdCgpIHtcbiAgICB0aGlzLmRhdGFUYWJsZS5vZmZzZXQgPSAwO1xuICB9XG5cbiAgcGFnZUxhc3QoKSB7XG4gICAgdGhpcy5kYXRhVGFibGUub2Zmc2V0ID0gKHRoaXMubWF4UGFnZSAtIDEpICogdGhpcy5kYXRhVGFibGUubGltaXQ7XG4gIH1cblxuICBnZXQgbWF4UGFnZSgpIHtcbiAgICByZXR1cm4gTWF0aC5jZWlsKHRoaXMuZGF0YVRhYmxlLml0ZW1Db3VudCAvIHRoaXMuZGF0YVRhYmxlLmxpbWl0KTtcbiAgfVxuXG4gIGdldCBsaW1pdCgpIHtcbiAgICByZXR1cm4gdGhpcy5kYXRhVGFibGUubGltaXQ7XG4gIH1cblxuICBzZXQgbGltaXQodmFsdWUpIHtcbiAgICB0aGlzLmRhdGFUYWJsZS5saW1pdCA9IE51bWJlcih2YWx1ZSBhcyBhbnkpOyAvLyBUT0RPIGJldHRlciB3YXkgdG8gaGFuZGxlIHRoYXQgdmFsdWUgb2YgbnVtYmVyIDxpbnB1dD4gaXMgc3RyaW5nP1xuICB9XG5cbiAgZ2V0IHBhZ2UoKSB7XG4gICAgcmV0dXJuIHRoaXMuZGF0YVRhYmxlLnBhZ2U7XG4gIH1cblxuICBzZXQgcGFnZSh2YWx1ZSkge1xuICAgIHRoaXMuZGF0YVRhYmxlLnBhZ2UgPSBOdW1iZXIodmFsdWUgYXMgYW55KTtcbiAgfVxuXG4gIGNyZWF0ZVBhZ2VSYW5nZShudW1iZXIsIHBhZ2UpOiBhbnlbXSB7XG4gICAgY29uc3QgZGlzcGxheWVkUGFnZSA9IDM7XG4gICAgbGV0IGl0ZW1zOiBudW1iZXJbXSA9IFtdO1xuICAgIGlmIChudW1iZXIgPiAxKSB7XG4gICAgICBsZXQgbWF4UGFnZSA9IG51bWJlcjtcbiAgICAgIGxldCBtaW5QYWdlID0gMTtcbiAgICAgIGlmIChwYWdlID09PSAxICYmIG1heFBhZ2UgPj0gZGlzcGxheWVkUGFnZSkge1xuICAgICAgICBtYXhQYWdlID0gMztcbiAgICAgIH0gZWxzZSBpZiAocGFnZSA+IDEgJiYgbWF4UGFnZSA+IHBhZ2UgKyAxKSB7XG4gICAgICAgIG1pblBhZ2UgPSBwYWdlIC0gMTtcbiAgICAgICAgbWF4UGFnZSA9IHBhZ2UgKyAxO1xuICAgICAgfSBlbHNlIGlmIChwYWdlID4gMiAmJiBtYXhQYWdlID4gcGFnZSkge1xuICAgICAgICBtaW5QYWdlID0gcGFnZSAtIDE7XG4gICAgICAgIG1heFBhZ2UgPSBwYWdlICsgMTtcbiAgICAgIH0gZWxzZSBpZiAocGFnZSA+IDIgJiYgbWF4UGFnZSA9PT0gcGFnZSkge1xuICAgICAgICBtaW5QYWdlID0gcGFnZSAtIDI7XG4gICAgICAgIG1heFBhZ2UgPSBwYWdlO1xuICAgICAgfVxuICAgICAgZm9yIChsZXQgaSA9IG1pblBhZ2U7IGkgPD0gbWF4UGFnZTsgaSsrKSB7XG4gICAgICAgIGl0ZW1zLnB1c2goaSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBpdGVtcztcbiAgfVxufVxuIl19