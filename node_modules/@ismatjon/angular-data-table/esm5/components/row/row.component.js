import * as tslib_1 from "tslib";
import { Component, Input, Inject, forwardRef, Output, EventEmitter } from '@angular/core';
import { DataTable } from '../table/table.component';
var DataTableRow = /** @class */ (function () {
    function DataTableRow(dataTable) {
        this.dataTable = dataTable;
        this._this = this; // FIXME is there no template keyword for this in angular 2?
        this.selectedChange = new EventEmitter();
    }
    Object.defineProperty(DataTableRow.prototype, "selected", {
        get: function () {
            return this._selected;
        },
        set: function (selected) {
            this._selected = selected;
            this.selectedChange.emit(selected);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataTableRow.prototype, "displayIndex", {
        // other:
        get: function () {
            if (this.dataTable.pagination) {
                return this.dataTable.displayParams.offset + this.index + 1;
            }
            else {
                return this.index + 1;
            }
        },
        enumerable: true,
        configurable: true
    });
    DataTableRow.prototype.getTooltip = function () {
        if (this.dataTable.rowTooltip) {
            return this.dataTable.rowTooltip(this.item, this, this.index);
        }
        return '';
    };
    DataTableRow.prototype.ngOnDestroy = function () {
        this.selected = false;
    };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], DataTableRow.prototype, "item", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number)
    ], DataTableRow.prototype, "index", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", Object)
    ], DataTableRow.prototype, "selectedChange", void 0);
    DataTableRow = tslib_1.__decorate([
        Component({
            selector: '[dataTableRow]',
            template: "<tr\n  class=\"data-table-row\"\n  [title]=\"getTooltip()\"\n  [style.background-color]=\"dataTable.getRowColor(item, index, _this)\"\n  [class.row-odd]=\"index % 2 === 0\"\n  [class.row-even]=\"index % 2 === 1\"\n  [class.selected]=\"selected\"\n  [class.clickable]=\"dataTable.selectOnRowClick\"\n  (dblclick)=\"dataTable.rowDoubleClicked(_this, $event)\"\n  (click)=\"dataTable.rowClicked(_this, $event)\"\n>\n  <td [hide]=\"!dataTable.expandColumnVisible\">\n    <div\n      tabindex=\"0\"\n      role=\"button\"\n      (click)=\"expanded = !expanded; $event.stopPropagation()\"\n      class=\"row-expand-button\"\n      [attr.aria-expanded]=\"expanded\"\n      [title]=\"dataTable.translations.expandRow\"\n      [attr.aria-label]=\"dataTable.translations.expandRow\"\n    >\n      <span\n        class=\"fa\"\n        [ngClass]=\"{\n          'fa-caret-right': !expanded,\n          'fa-caret-bottom': expanded\n        }\"\n        aria-hidden=\"true\"\n      ></span>\n    </div>\n  </td>\n  <td [hide]=\"!dataTable.indexColumnVisible\" class=\"index-column\">\n    {{ displayIndex }}\n  </td>\n  <td [hide]=\"!dataTable.selectColumnVisible\" class=\"select-column\">\n    <input type=\"checkbox\" [(ngModel)]=\"selected\" />\n  </td>\n  <td\n    *ngFor=\"let column of dataTable.columns\"\n    [hide]=\"!column.visible\"\n    [ngClass]=\"column.styleClassObject\"\n    class=\"data-column\"\n    [style.background-color]=\"column.getCellColor(_this, index)\"\n  >\n    <div *ngIf=\"!column.cellTemplate\">\n      {{ item[column.property] }}\n    </div>\n    <div\n      *ngIf=\"column.cellTemplate\"\n      [ngTemplateOutlet]=\"column.cellTemplate\"\n      [ngTemplateOutletContext]=\"{ column: column, row: _this, item: item }\"\n    ></div>\n  </td>\n</tr>\n<tr *ngIf=\"dataTable.expandableRows\" [hide]=\"!expanded\" class=\"row-expansion\">\n  <td [attr.colspan]=\"dataTable.columnCount\">\n    <div\n      [ngTemplateOutlet]=\"dataTable.expandTemplate\"\n      [ngTemplateOutletContext]=\"{ row: _this, item: item }\"\n    ></div>\n  </td>\n</tr>\n",
            styles: [".select-column{text-align:center}.row-expand-button{cursor:pointer;text-align:center}.clickable{cursor:pointer}"]
        }),
        tslib_1.__param(0, Inject(forwardRef(function () { return DataTable; }))),
        tslib_1.__metadata("design:paramtypes", [DataTable])
    ], DataTableRow);
    return DataTableRow;
}());
export { DataTableRow };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm93LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bpc21hdGpvbi9hbmd1bGFyLWRhdGEtdGFibGUvIiwic291cmNlcyI6WyJjb21wb25lbnRzL3Jvdy9yb3cuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULEtBQUssRUFDTCxNQUFNLEVBQ04sVUFBVSxFQUNWLE1BQU0sRUFDTixZQUFZLEVBRWIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBT3JEO0lBYUUsc0JBQzhDLFNBQW9CO1FBQXBCLGNBQVMsR0FBVCxTQUFTLENBQVc7UUFWbEUsVUFBSyxHQUFHLElBQUksQ0FBQyxDQUFDLDREQUE0RDtRQU9oRSxtQkFBYyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFJM0MsQ0FBQztJQUVKLHNCQUFJLGtDQUFRO2FBQVo7WUFDRSxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDeEIsQ0FBQzthQUVELFVBQWEsUUFBUTtZQUNuQixJQUFJLENBQUMsU0FBUyxHQUFHLFFBQVEsQ0FBQztZQUMxQixJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNyQyxDQUFDOzs7T0FMQTtJQVNELHNCQUFJLHNDQUFZO1FBRmhCLFNBQVM7YUFFVDtZQUNFLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFVLEVBQUU7Z0JBQzdCLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO2FBQzdEO2lCQUFNO2dCQUNMLE9BQU8sSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7YUFDdkI7UUFDSCxDQUFDOzs7T0FBQTtJQUVELGlDQUFVLEdBQVY7UUFDRSxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsVUFBVSxFQUFFO1lBQzdCLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQy9EO1FBQ0QsT0FBTyxFQUFFLENBQUM7SUFDWixDQUFDO0lBRUQsa0NBQVcsR0FBWDtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO0lBQ3hCLENBQUM7SUE1Q1E7UUFBUixLQUFLLEVBQUU7OzhDQUFXO0lBQ1Y7UUFBUixLQUFLLEVBQUU7OytDQUFlO0lBU2I7UUFBVCxNQUFNLEVBQUU7O3dEQUFxQztJQVhuQyxZQUFZO1FBTHhCLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxnQkFBZ0I7WUFDMUIsMGhFQUFtQzs7U0FFcEMsQ0FBQztRQWVHLG1CQUFBLE1BQU0sQ0FBQyxVQUFVLENBQUMsY0FBTSxPQUFBLFNBQVMsRUFBVCxDQUFTLENBQUMsQ0FBQyxDQUFBO2lEQUFtQixTQUFTO09BZHZELFlBQVksQ0E4Q3hCO0lBQUQsbUJBQUM7Q0FBQSxBQTlDRCxJQThDQztTQTlDWSxZQUFZIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ29tcG9uZW50LFxuICBJbnB1dCxcbiAgSW5qZWN0LFxuICBmb3J3YXJkUmVmLFxuICBPdXRwdXQsXG4gIEV2ZW50RW1pdHRlcixcbiAgT25EZXN0cm95XG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRGF0YVRhYmxlIH0gZnJvbSAnLi4vdGFibGUvdGFibGUuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnW2RhdGFUYWJsZVJvd10nLFxuICB0ZW1wbGF0ZVVybDogJy4vcm93LmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vcm93LmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBEYXRhVGFibGVSb3cgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuICBASW5wdXQoKSBpdGVtOiBhbnk7XG4gIEBJbnB1dCgpIGluZGV4OiBudW1iZXI7XG5cbiAgX3RoaXMgPSB0aGlzOyAvLyBGSVhNRSBpcyB0aGVyZSBubyB0ZW1wbGF0ZSBrZXl3b3JkIGZvciB0aGlzIGluIGFuZ3VsYXIgMj9cbiAgZXhwYW5kZWQ6IGJvb2xlYW47XG5cbiAgLy8gcm93IHNlbGVjdGlvbjpcblxuICBwcml2YXRlIF9zZWxlY3RlZDogYm9vbGVhbjtcblxuICBAT3V0cHV0KCkgc2VsZWN0ZWRDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgQEluamVjdChmb3J3YXJkUmVmKCgpID0+IERhdGFUYWJsZSkpIHB1YmxpYyBkYXRhVGFibGU6IERhdGFUYWJsZVxuICApIHt9XG5cbiAgZ2V0IHNlbGVjdGVkKCkge1xuICAgIHJldHVybiB0aGlzLl9zZWxlY3RlZDtcbiAgfVxuXG4gIHNldCBzZWxlY3RlZChzZWxlY3RlZCkge1xuICAgIHRoaXMuX3NlbGVjdGVkID0gc2VsZWN0ZWQ7XG4gICAgdGhpcy5zZWxlY3RlZENoYW5nZS5lbWl0KHNlbGVjdGVkKTtcbiAgfVxuXG4gIC8vIG90aGVyOlxuXG4gIGdldCBkaXNwbGF5SW5kZXgoKSB7XG4gICAgaWYgKHRoaXMuZGF0YVRhYmxlLnBhZ2luYXRpb24pIHtcbiAgICAgIHJldHVybiB0aGlzLmRhdGFUYWJsZS5kaXNwbGF5UGFyYW1zLm9mZnNldCArIHRoaXMuaW5kZXggKyAxO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gdGhpcy5pbmRleCArIDE7XG4gICAgfVxuICB9XG5cbiAgZ2V0VG9vbHRpcCgpIHtcbiAgICBpZiAodGhpcy5kYXRhVGFibGUucm93VG9vbHRpcCkge1xuICAgICAgcmV0dXJuIHRoaXMuZGF0YVRhYmxlLnJvd1Rvb2x0aXAodGhpcy5pdGVtLCB0aGlzLCB0aGlzLmluZGV4KTtcbiAgICB9XG4gICAgcmV0dXJuICcnO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5zZWxlY3RlZCA9IGZhbHNlO1xuICB9XG59XG4iXX0=