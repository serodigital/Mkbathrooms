import * as tslib_1 from "tslib";
import { Component, Inject, forwardRef, Input } from '@angular/core';
import { DataTable } from '../table/table.component';
let DataTablePagination = class DataTablePagination {
    constructor(dataTable) {
        this.dataTable = dataTable;
        this.show_range = false;
        this.show_limit = false;
        this.show_input = false;
        this.show_numbers = true;
    }
    pageBack() {
        this.dataTable.offset -= Math.min(this.dataTable.limit, this.dataTable.offset);
    }
    pageForward() {
        this.dataTable.offset += this.dataTable.limit;
    }
    pageFirst() {
        this.dataTable.offset = 0;
    }
    pageLast() {
        this.dataTable.offset = (this.maxPage - 1) * this.dataTable.limit;
    }
    get maxPage() {
        return Math.ceil(this.dataTable.itemCount / this.dataTable.limit);
    }
    get limit() {
        return this.dataTable.limit;
    }
    set limit(value) {
        this.dataTable.limit = Number(value); // TODO better way to handle that value of number <input> is string?
    }
    get page() {
        return this.dataTable.page;
    }
    set page(value) {
        this.dataTable.page = Number(value);
    }
    createPageRange(number, page) {
        const displayedPage = 3;
        let items = [];
        if (number > 1) {
            let maxPage = number;
            let minPage = 1;
            if (page === 1 && maxPage >= displayedPage) {
                maxPage = 3;
            }
            else if (page > 1 && maxPage > page + 1) {
                minPage = page - 1;
                maxPage = page + 1;
            }
            else if (page > 2 && maxPage > page) {
                minPage = page - 1;
                maxPage = page + 1;
            }
            else if (page > 2 && maxPage === page) {
                minPage = page - 2;
                maxPage = page;
            }
            for (let i = minPage; i <= maxPage; i++) {
                items.push(i);
            }
        }
        return items;
    }
};
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], DataTablePagination.prototype, "show_range", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], DataTablePagination.prototype, "show_limit", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], DataTablePagination.prototype, "show_input", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], DataTablePagination.prototype, "show_numbers", void 0);
DataTablePagination = tslib_1.__decorate([
    Component({
        selector: 'data-table-pagination',
        template: "<div class=\"pagination-box d-flex justify-content-between\">\n  <div class=\"pagination-range\" *ngIf=\"show_range\">\n    {{ dataTable.translations.paginationRange }}:\n    <span>{{ dataTable.offset + 1 }}</span>\n    -\n    <span>\n      {{ [dataTable.offset + dataTable.limit, dataTable.itemCount] | min }}\n    </span>\n    /\n    <span>{{ dataTable.itemCount }}</span>\n  </div>\n  <div class=\"pagination-controllers d-flex\">\n    <div class=\"pagination-limit\" *ngIf=\"show_limit\">\n      <div class=\"input-group\">\n        <span class=\"input-group-prepend\">\n          <span class=\"input-group-text\">\n            {{ dataTable.translations.paginationLimit }}:\n          </span>\n        </span>\n        <input\n          #limitInput\n          type=\"number\"\n          class=\"form-control\"\n          min=\"1\"\n          step=\"1\"\n          [ngModel]=\"limit\"\n          (blur)=\"limit = limitInput.value\"\n          (keyup.enter)=\"limit = limitInput.value\"\n          (keyup.esc)=\"limitInput.value = limit\"\n        />\n      </div>\n    </div>\n    <div class=\"pagination-pages d-flex\" *ngIf=\"maxPage > 1\">\n      <button\n        [disabled]=\"dataTable.offset <= 0\"\n        (click)=\"pageFirst()\"\n        class=\"btn btn-secondary pagination-firstpage\"\n      >\n        &laquo;\n      </button>\n      <button\n        [disabled]=\"dataTable.offset <= 0\"\n        (click)=\"pageBack()\"\n        class=\"btn btn-secondary pagination-prevpage mx-1\"\n      >\n        &lsaquo;\n      </button>\n      <div class=\"pagination-page\" *ngIf=\"show_input\">\n        <div class=\"input-group\">\n          <input\n            #pageInput\n            type=\"number\"\n            class=\"form-control\"\n            min=\"1\"\n            step=\"1\"\n            max=\"{{ maxPage }}\"\n            [ngModel]=\"page\"\n            (blur)=\"page = pageInput.value\"\n            (keyup.enter)=\"page = pageInput.value\"\n            (keyup.esc)=\"pageInput.value = page\"\n          />\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">\n              <span>/</span>\n              <span>{{ dataTable.lastPage }}</span>\n            </span>\n          </div>\n        </div>\n      </div>\n      <div class=\"pagination-page\" *ngIf=\"show_numbers\">\n        <button\n          *ngFor=\"let i of createPageRange(maxPage, page)\"\n          [disabled]=\"i == page\"\n          (click)=\"page = i\"\n          class=\"btn btn-default\"\n        >\n          {{ i }}\n        </button>\n      </div>\n      <button\n        [disabled]=\"dataTable.offset + dataTable.limit >= dataTable.itemCount\"\n        (click)=\"pageForward()\"\n        class=\"btn btn-secondary pagination-nextpage mx-1\"\n      >\n        &rsaquo;\n      </button>\n      <button\n        [disabled]=\"dataTable.offset + dataTable.limit >= dataTable.itemCount\"\n        (click)=\"pageLast()\"\n        class=\"btn btn-secondary pagination-lastpage\"\n      >\n        &raquo;\n      </button>\n    </div>\n  </div>\n</div>\n",
        styles: [".pagination-box{position:relative;margin-top:-10px}.pagination-range{display:flex;align-items:center;margin-left:3px}.pagination-range span{margin:0 4px}.pagination-range span:last-child{margin-right:0;margin-left:4px}.pagination-controllers input{min-width:60px;text-align:right}.pagination-limit{margin-right:25px;min-width:150px;max-width:200px}.pagination-page{width:110px}.pagination-reload{color:gray;font-size:12px}"]
    }),
    tslib_1.__param(0, Inject(forwardRef(() => DataTable))),
    tslib_1.__metadata("design:paramtypes", [DataTable])
], DataTablePagination);
export { DataTablePagination };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnaW5hdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AaXNtYXRqb24vYW5ndWxhci1kYXRhLXRhYmxlLyIsInNvdXJjZXMiOlsiY29tcG9uZW50cy9wYWdpbmF0aW9uL3BhZ2luYXRpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3JFLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQU9yRCxJQUFhLG1CQUFtQixHQUFoQyxNQUFhLG1CQUFtQjtJQU05QixZQUM4QyxTQUFvQjtRQUFwQixjQUFTLEdBQVQsU0FBUyxDQUFXO1FBTnpELGVBQVUsR0FBRyxLQUFLLENBQUM7UUFDbkIsZUFBVSxHQUFHLEtBQUssQ0FBQztRQUNuQixlQUFVLEdBQUcsS0FBSyxDQUFDO1FBQ25CLGlCQUFZLEdBQUcsSUFBSSxDQUFDO0lBSTFCLENBQUM7SUFFSixRQUFRO1FBQ04sSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDLEdBQUcsQ0FDL0IsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQ3BCLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUN0QixDQUFDO0lBQ0osQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQztJQUNoRCxDQUFDO0lBRUQsU0FBUztRQUNQLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztJQUM1QixDQUFDO0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQztJQUNwRSxDQUFDO0lBRUQsSUFBSSxPQUFPO1FBQ1QsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDcEUsQ0FBQztJQUVELElBQUksS0FBSztRQUNQLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUM7SUFDOUIsQ0FBQztJQUVELElBQUksS0FBSyxDQUFDLEtBQUs7UUFDYixJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUMsS0FBWSxDQUFDLENBQUMsQ0FBQyxvRUFBb0U7SUFDbkgsQ0FBQztJQUVELElBQUksSUFBSTtRQUNOLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUM7SUFDN0IsQ0FBQztJQUVELElBQUksSUFBSSxDQUFDLEtBQUs7UUFDWixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksR0FBRyxNQUFNLENBQUMsS0FBWSxDQUFDLENBQUM7SUFDN0MsQ0FBQztJQUVELGVBQWUsQ0FBQyxNQUFNLEVBQUUsSUFBSTtRQUMxQixNQUFNLGFBQWEsR0FBRyxDQUFDLENBQUM7UUFDeEIsSUFBSSxLQUFLLEdBQWEsRUFBRSxDQUFDO1FBQ3pCLElBQUksTUFBTSxHQUFHLENBQUMsRUFBRTtZQUNkLElBQUksT0FBTyxHQUFHLE1BQU0sQ0FBQztZQUNyQixJQUFJLE9BQU8sR0FBRyxDQUFDLENBQUM7WUFDaEIsSUFBSSxJQUFJLEtBQUssQ0FBQyxJQUFJLE9BQU8sSUFBSSxhQUFhLEVBQUU7Z0JBQzFDLE9BQU8sR0FBRyxDQUFDLENBQUM7YUFDYjtpQkFBTSxJQUFJLElBQUksR0FBRyxDQUFDLElBQUksT0FBTyxHQUFHLElBQUksR0FBRyxDQUFDLEVBQUU7Z0JBQ3pDLE9BQU8sR0FBRyxJQUFJLEdBQUcsQ0FBQyxDQUFDO2dCQUNuQixPQUFPLEdBQUcsSUFBSSxHQUFHLENBQUMsQ0FBQzthQUNwQjtpQkFBTSxJQUFJLElBQUksR0FBRyxDQUFDLElBQUksT0FBTyxHQUFHLElBQUksRUFBRTtnQkFDckMsT0FBTyxHQUFHLElBQUksR0FBRyxDQUFDLENBQUM7Z0JBQ25CLE9BQU8sR0FBRyxJQUFJLEdBQUcsQ0FBQyxDQUFDO2FBQ3BCO2lCQUFNLElBQUksSUFBSSxHQUFHLENBQUMsSUFBSSxPQUFPLEtBQUssSUFBSSxFQUFFO2dCQUN2QyxPQUFPLEdBQUcsSUFBSSxHQUFHLENBQUMsQ0FBQztnQkFDbkIsT0FBTyxHQUFHLElBQUksQ0FBQzthQUNoQjtZQUNELEtBQUssSUFBSSxDQUFDLEdBQUcsT0FBTyxFQUFFLENBQUMsSUFBSSxPQUFPLEVBQUUsQ0FBQyxFQUFFLEVBQUU7Z0JBQ3ZDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDZjtTQUNGO1FBQ0QsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDO0NBQ0YsQ0FBQTtBQXhFVTtJQUFSLEtBQUssRUFBRTs7dURBQW9CO0FBQ25CO0lBQVIsS0FBSyxFQUFFOzt1REFBb0I7QUFDbkI7SUFBUixLQUFLLEVBQUU7O3VEQUFvQjtBQUNuQjtJQUFSLEtBQUssRUFBRTs7eURBQXFCO0FBSmxCLG1CQUFtQjtJQUwvQixTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsdUJBQXVCO1FBQ2pDLGtoR0FBMEM7O0tBRTNDLENBQUM7SUFRRyxtQkFBQSxNQUFNLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUE7NkNBQW1CLFNBQVM7R0FQdkQsbUJBQW1CLENBeUUvQjtTQXpFWSxtQkFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEluamVjdCwgZm9yd2FyZFJlZiwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERhdGFUYWJsZSB9IGZyb20gJy4uL3RhYmxlL3RhYmxlLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2RhdGEtdGFibGUtcGFnaW5hdGlvbicsXG4gIHRlbXBsYXRlVXJsOiAnLi9wYWdpbmF0aW9uLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vcGFnaW5hdGlvbi5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgRGF0YVRhYmxlUGFnaW5hdGlvbiB7XG4gIEBJbnB1dCgpIHNob3dfcmFuZ2UgPSBmYWxzZTtcbiAgQElucHV0KCkgc2hvd19saW1pdCA9IGZhbHNlO1xuICBASW5wdXQoKSBzaG93X2lucHV0ID0gZmFsc2U7XG4gIEBJbnB1dCgpIHNob3dfbnVtYmVycyA9IHRydWU7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgQEluamVjdChmb3J3YXJkUmVmKCgpID0+IERhdGFUYWJsZSkpIHB1YmxpYyBkYXRhVGFibGU6IERhdGFUYWJsZVxuICApIHt9XG5cbiAgcGFnZUJhY2soKSB7XG4gICAgdGhpcy5kYXRhVGFibGUub2Zmc2V0IC09IE1hdGgubWluKFxuICAgICAgdGhpcy5kYXRhVGFibGUubGltaXQsXG4gICAgICB0aGlzLmRhdGFUYWJsZS5vZmZzZXRcbiAgICApO1xuICB9XG5cbiAgcGFnZUZvcndhcmQoKSB7XG4gICAgdGhpcy5kYXRhVGFibGUub2Zmc2V0ICs9IHRoaXMuZGF0YVRhYmxlLmxpbWl0O1xuICB9XG5cbiAgcGFnZUZpcnN0KCkge1xuICAgIHRoaXMuZGF0YVRhYmxlLm9mZnNldCA9IDA7XG4gIH1cblxuICBwYWdlTGFzdCgpIHtcbiAgICB0aGlzLmRhdGFUYWJsZS5vZmZzZXQgPSAodGhpcy5tYXhQYWdlIC0gMSkgKiB0aGlzLmRhdGFUYWJsZS5saW1pdDtcbiAgfVxuXG4gIGdldCBtYXhQYWdlKCkge1xuICAgIHJldHVybiBNYXRoLmNlaWwodGhpcy5kYXRhVGFibGUuaXRlbUNvdW50IC8gdGhpcy5kYXRhVGFibGUubGltaXQpO1xuICB9XG5cbiAgZ2V0IGxpbWl0KCkge1xuICAgIHJldHVybiB0aGlzLmRhdGFUYWJsZS5saW1pdDtcbiAgfVxuXG4gIHNldCBsaW1pdCh2YWx1ZSkge1xuICAgIHRoaXMuZGF0YVRhYmxlLmxpbWl0ID0gTnVtYmVyKHZhbHVlIGFzIGFueSk7IC8vIFRPRE8gYmV0dGVyIHdheSB0byBoYW5kbGUgdGhhdCB2YWx1ZSBvZiBudW1iZXIgPGlucHV0PiBpcyBzdHJpbmc/XG4gIH1cblxuICBnZXQgcGFnZSgpIHtcbiAgICByZXR1cm4gdGhpcy5kYXRhVGFibGUucGFnZTtcbiAgfVxuXG4gIHNldCBwYWdlKHZhbHVlKSB7XG4gICAgdGhpcy5kYXRhVGFibGUucGFnZSA9IE51bWJlcih2YWx1ZSBhcyBhbnkpO1xuICB9XG5cbiAgY3JlYXRlUGFnZVJhbmdlKG51bWJlciwgcGFnZSk6IGFueVtdIHtcbiAgICBjb25zdCBkaXNwbGF5ZWRQYWdlID0gMztcbiAgICBsZXQgaXRlbXM6IG51bWJlcltdID0gW107XG4gICAgaWYgKG51bWJlciA+IDEpIHtcbiAgICAgIGxldCBtYXhQYWdlID0gbnVtYmVyO1xuICAgICAgbGV0IG1pblBhZ2UgPSAxO1xuICAgICAgaWYgKHBhZ2UgPT09IDEgJiYgbWF4UGFnZSA+PSBkaXNwbGF5ZWRQYWdlKSB7XG4gICAgICAgIG1heFBhZ2UgPSAzO1xuICAgICAgfSBlbHNlIGlmIChwYWdlID4gMSAmJiBtYXhQYWdlID4gcGFnZSArIDEpIHtcbiAgICAgICAgbWluUGFnZSA9IHBhZ2UgLSAxO1xuICAgICAgICBtYXhQYWdlID0gcGFnZSArIDE7XG4gICAgICB9IGVsc2UgaWYgKHBhZ2UgPiAyICYmIG1heFBhZ2UgPiBwYWdlKSB7XG4gICAgICAgIG1pblBhZ2UgPSBwYWdlIC0gMTtcbiAgICAgICAgbWF4UGFnZSA9IHBhZ2UgKyAxO1xuICAgICAgfSBlbHNlIGlmIChwYWdlID4gMiAmJiBtYXhQYWdlID09PSBwYWdlKSB7XG4gICAgICAgIG1pblBhZ2UgPSBwYWdlIC0gMjtcbiAgICAgICAgbWF4UGFnZSA9IHBhZ2U7XG4gICAgICB9XG4gICAgICBmb3IgKGxldCBpID0gbWluUGFnZTsgaSA8PSBtYXhQYWdlOyBpKyspIHtcbiAgICAgICAgaXRlbXMucHVzaChpKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGl0ZW1zO1xuICB9XG59XG4iXX0=